FORMAT: 1A
HOST: http://www.google.com

# bro
This API is a *short texts saving* service similar to its physical paper presence on your table.

#### Allowed HTTPs requests:

 * `POST` - To create or update resource
 * `PUT` - To create or update resource
 * `GET` - Get a resource or list of resources
 * `DELETE` - To delete resource

#### Description Of Usual Server Responses
 * `200` OK - the request was successful (some API calls may return 201 instead).
 * `201` Created - the request was successful and a resource was created.
 * `204` No Content - the request was successful but there is no representation to return (i.e. the response is empty).
 * `400` Bad Request - the request could not be understood or was missing required parameters.
 * `401` Unauthorized - authentication failed or user doesn't have permissions for requested operation.
 * `403` Forbidden - access denied.
 * `404` Not Found - resource was not found.
 * `405` Method Not Allowed - requested method is not supported for resource.
 * `429` Too Many Requests - exceeded GoodData API limits. Pause requests, wait up to one minute, and try again.

# Group Login

To login into the GoodData API, use following calls:
 * 1. `POST` your credentials in JSON body to the gdc/account/login resource. An **SST Token** is returned back in SetCookie header.
 * 2. `GET` the gdc/account/token resource using the **SST Token** in your header to receive a **TT Token**.
 * 3. Use the **TT Token** in your API calls header: -cookie
Remember that TT Token has limited validity. Once you received 401 Unauthorized Response, you need to GET new **TT Token** in following resource with **SST Token** specified in call header.

#### Login Properties

 * login (string) : User's email
 * remember (boolean) : Remember user login
 
 deprecated:
 
 * password (string) : Password in not longer stored within this database. OAuth will be used for authentication purposes.

## Login [/account/login]

### Login User [POST]
+ Request (application/json)

        {"postUserLogin":{"login":"user@company.com","password":"YourPassword","remember":1}}


+ Response 200 (application/json)

    + Header
    
            Set-Cookie: GDCAuthTT=; path=/gdc; expires=Mon, 30-Jul-2012 09:12:42 GMT; secure; HttpOnly, GDCAuthSST={super-secured-token}; path=/gdc/account; secure; HttpOnly

    + Body
    
            {"userLogin":{"profile":"/gdc/account/profile/USER-ID","state":"/gdc/account/login/USER-ID"}}

### Logout [DELETE]

+ Response 200 (application/json)
        
        {}


# Group Users

#### Userproperties

 * `id` positive alphanumeric and unique string
 * `name` full name including optional nickname. "surname ['nickname'] lastname"
 * `email` email adress
 * `password` hased password
 * `own_events` created events
 * `invitations` invitations 
 * `androidDeviceIDs` ids of all connected android devices
 * `iOSDeviceIDs` ids of all connected iOS devices
 * `followers` list of all friend ID's
 * `following` list of all friends to follow
 * `private` (boolean) true if user has a private profile
 * `sex` male/female
 * `profile_image` optional http link to an image ressource
 * `last_action` timestamp of last request
 * `whitelisted_actions` ID's of allowed categories (default: [1] (= all))
 * `blacklisted_actions` ID's of disallowed categories (default: [] (= none))
 * `location` "-44.22,-33.55"
 
## Users Collection [/users?offset=0&limit=5]
### List all Users [GET]

Paging: This resource optionally allows paging. Use offset and limit parameters on the end of the URI. example: users?offset=1&limit=3

+ Request

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia
    
    + Body

+ Response 200 (application/json)

        [{
          "id": "SdjhS3u4238SDJkk",
          "sex":"male",
          "name": "Christian Butter"
        }, {
          "id": "sdkSDJk245kj3kDjk3",
          "sex":"male",
          "profile_image" : "http://upload.wikimedia.org/wikipedia/commons/a/a6/Caparica_December_2011-1a.jpg",
          "name": "Dominik 'ommi' Pichler"
        }, {
          "id": "sdjkja38743DJK3SDkj",
          "sex":"male",
          "name": "Benjamin 'benni' Pazdernik"
        }, {
          "id": "jksdj3889a89sdJKJDKSi3kjDu", 
          "sex":"female",
          "name": "Carla Schefb√∂rger"
        }]

## Users Creaton [/users]
Operations on current user (extended information and permissions)

### Create a User [POST]
+ Request (application/json)

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia
    
    + Body
    
            {
                "name": "Dominik 'ommi' Pichler",
                "image" : "<Base64Image>",
                "email": "ommi@u33.sch",
                "password": "mamamia",
                "whitelisted_actions":[1],
                "blacklisted_actions":[],
                "location":"<GeoPoint>"
            }

+ Response 201 (application/json)

        {
            "id": "SdD3jjD5JDKsdjk2",
            "name": "Dominik 'ommi' Pichler",
            "profile_image" : "http://upload.wikimedia.org/wikipedia/commons/a/a6/Caparica_December_2011-1a.jpg",
            "email": "ommi@u33.sch",
            "whitelisted_actions":[1],
            "blacklisted_actions":[]
        }

## User [/users/{id}]
A single User object with all its details


### Retrieve a User [GET]

Whitelist and blacklist and location are only part of the response, if the receiver and the given user are friends.

+ Request

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia
    
+ Parameters

    + id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.

+ Response 200 (application/json)

    + Body

            {
                "id": "jkSDKJDSisdi3292DJK",
                "name": "Dominik 'ommi' Pichler",
                "profile_image" : "http://upload.wikimedia.org/wikipedia/commons/a/a6/Caparica_December_2011-1a.jpg",
                "email": "ommi@u33.sch",
                "whitelisted_actions":[1],
                "blacklisted_actions":[],
                "location": "-44.22,-33.55"
            }

+ Response 401 (application/json)

    + Body
            
            {
                "error" : "There is no such a user for you, dear guest."
            }


## Current User [/users/me]
Operations on current user (extended information and permissions)

### Retrieve current User [GET]
+ Request

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia

+ Response 200 (application/json)

    + Body

            {
                "id": "JSdkj43edjkasld39sd",
                "name": "Dominik 'ommi' Pichler",
                "profile_image" : "http://upload.wikimedia.org/wikipedia/commons/a/a6/Caparica_December_2011-1a.jpg",
                "email": "ommi@u33.sch",
                "own_events":[0,4,8,9],
                "invitations":[1,3,2,5],
                "androidDeviceIDs":[213123123123],
                "iOsDeviceIds":"TODO",
                "whitelisted_actions":[1],
                "blacklisted_actions":[]
            }

### Update current User [PATCH]
+ Request

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia

+ Response 200 (application/json)

    + Body

            {
                "id": "SDjSDh33i23kjLDJSDkjD3",
                "name": "Dominik 'ommi' Pichler",
                "image": "<BASE64Image>",
                "email": "ommi@u33.sch"
                "password": "mamamia",
                "own_events":[0,4,8,9],
                "invitations":[1,3,2,5],
                "androidDeviceIDs":[213123123123],
                "iOsDeviceIds":"TODO",
                "whitelisted_actions":[1],
                "blacklisted_actions":[],
                "location":"<GeoPoint>"
            }
            


# Group Category
Categorie related resources of the **Category API**

#### Category Properties

 * `id` : alphanumeric string
 * `name`
 * `parent`
 
## Categorie Collection [/categories?offset=1&limit=3]

Paging: This resource optionally allows paging. Use offset and limit parameters on the end of the URI. example: categories?offset=1&limit=3

### List all Categories [GET]
+ Response 200 (application/json)

        [{
          "id": "jksdJDSKDjsDjisdjksaDD389D", 
            "name": "all",
            "parent": null
          
        }, {
          "id": "JSKDksd93299saJDKJSKDK", 
            "name": "orgie",
            "parent": 1
        }]

## Categorie Collection [/categories]
### Create a Categorie [POST]
+ Request (application/json)

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia
    
    + Body

            { 
                "name": "gruppensex",
                "parent": 1
            }

+ Response 201 (application/json)

    + Body
    
            {
                "id": "asdHJ3jksdJJSDKSKDjksdj",
                "name": "gruppensex",
                "parent": 1
            }
            
    + Schema

            {
                "id": "alphanum",
                "name": "string",
                "parent": "integer|null"
            }


+ Response 403 (application/json)

    + Body
    
            {
                "error":"Not for losers"
            }
            
## Category [/categories/{id}]
A single Categorie object with all its details

+ Parameters
    + id (required, number, `asdahA2usDXisudias`) ... Alphanumeric `id` of the Category to perform action with. Has example value.

### Retrieve a Categorie [GET]
+ Response 200 (application/json)

    + Body

            { 
            "id": "SSDsjadsa38SDsada3DHhsad", 
            "name": "all",
            "parent": null
            
            }
            
+ Response 401 (text/plain)

    + Body
    
            "There is no such a message for you, dear guest."
        
### Remove a Categorie [DELETE]
+ Request

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia
    
+ Response 204


# Group Events
Events related resources of the **BRO API**

#### Event Properties

 * `id` :  alphanummeric string
 * `place`
 * `datetime`
 * `participants`
 * `category`
 * `creator`
 
## Events Collection [/events?offset=1&limit=3]

Paging: This resource optionally allows paging. Use offset and limit parameters on the end of the URI. example: events?offset=1&limit=3

### List all Notes [GET]
+ Request

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia
    
+ Response 200 (application/json)

        [{
          "id": "hAHsd874r3e3j43kj4kj4kj3qkj4qkj3jdas", 
          "place":"-44.22,-33.55",
          "datetime":'2008-11-22 19:53:42',
          "participants":[1,5,23],
          "category": 1,
          "creator" : 3
        }, {
          "id": "asd3434324hIDUIUEUSJDUJDUSHDJHJKj7767sd", 
          "place":"-44.22,-33.55",
          "datetime":'2012-03-24 13:13:48',
          "participants":[4,14,3,6],
          "category": 5,
          "creator" : 4
        }]

## Events Collection [/events]

### Create a Event [POST]
+ Request (application/json)

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia
    
    + Body

            {
                "place":"-44.22,-33.55",
                "datetime":'2008-11-22 19:53:42',
                "participants":[1,5,23],
                "category": 1,
                "creator" : 3
            }

+ Response 201 (application/json)

        { "id": "Jsdjida6a7ejHD8sda3aasdhjasdHSD", 
          "place":"-44.22,-33.55",
          "datetime":'2008-11-22 19:53:42',
          "participants":[1,5,23],
          "category": 1,
          "creator" : 3 
        }

## Event [/users/{id}/events]
+ Request

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia
    
    + Body


## Event [/events/{id}]
A single Event object with all its details. ATTENTION: Permission denied, if user is not a paticipant.

+ Parameters
    + id (required, alphanum, `asdadhJSjh378SHkdksdD34`) ... Numeric `id` of the Note to perform action with. Has example value.

### Retrieve a Event [GET]
+ Request

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia
    
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            { "id": "HSdjasd839284hjda9Du9", 
              "place":"-44.22,-33.55",
              "datetime":'2008-11-22 19:53:42',
              "participants":[1,5,23],
              "category": 1,
              "creator" : 3 
            }
    
    + Schema

            {
                "id": "alphanum",
                "place": "SerializedGeoPtObject",
                "datetime": "datetime",
                "participants":["integer"],
                "category": "integer",
                "creator" : "integer" 
                
            }
            
+ Response 403 (application/json)

        {
            "error": "access forbidden"
        }

### Remove a Event [DELETE]
+ Request

    + Header
    
            Authorization: Bearer RsT5OjbzRn430zqMLgV3Ia
            
+ Response 204
